% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_LIDIF.R
\name{predict_LIDIF}
\alias{predict_LIDIF}
\title{Estimating the latent variable based on the LIDIF model fitting results}
\usage{
predict_LIDIF(
  dat.list,
  coefs_list,
  int_bound = 3L,
  evalimit = 10L,
  variance = TRUE
)
}
\arguments{
\item{dat.list}{The data list containing both the observed items matrix and enogenous variable matrix derived from `prepare_data` function. Should be of the same format as the input in the `LIDIF` function.}

\item{coefs_list}{The list of DIF effects. Should be of the same format as the `coefficients` value in `LIDIF` output}

\item{int_bound}{The adaptive integration boundaries. The default value is 3, meaning the integration taking from -3 to 3.}

\item{evalimit}{The number of quadrature used in the adaptive integration. The default value is 20.}

\item{variance}{Logical. Whether output the estimated variance as well. The default is TRUE.}
}
\value{
A list that contains
\itemize{
  \item est_mean - the estimated posterior mean.
  \item set_var - the estimated posterior variance. Output only if `variance` = TRUE.
}
}
\description{
The function estimates the latent variable by calculating the estimated mean (and the standard error) of the latent variable given the specified exogenous variables and item responses in LIDIF function.
}
\details{
Denote the latent variable as \eqn{Y}, the covariate matrix as \eqn{Z} and \eqn{X_1,...,X_p} are the observed items.
Then we can estimate the latent variable by calculating the posterior mean
\deqn{E(Y|Z, X_1, ..., X_p)}
and the posterior variance by
\deqn{Var(Y|Z, X_1,..., X_p)}
Therefore, the function can be used as both estimating the posterior mean of the latent variable for each individual,
 and predicting the latent level for new participants.
}
\examples{
 \dontrun{
## load the sample data (see `?LIDIF::binsurvs` for details)
binsurvs = LIDIF::binsurvs # The exogenous variables are age and sex.

## prepare for model fitting
dat.list = prepare_data(binsurvs$X, binsurvs$Z)

## LIDIF fitting
# The parameter specified is set to reduce the running time.
# In your analysis, please refer to the default value.
library(LIDIF)
res = LIDIF(dat.list = dat.list,
            cl_num = 5, # before running, please check if you have 5 cores
            type_list = "binary",
            maxit = 2,
            random_per = 0.5,
            init_nums = 2,
            init_maxit = 2)

## predict the posterior distribution of the latent variable
predict_LIDIF(dat.list = dat.list,
              coefs_list = res$coefficients)
}
}
