[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 LIDIF authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zeling . Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Z (2024). LIDIF: Likelihood-based Inference Differential Item Functioning (LIDIF). R package version 0.1.0.","code":"@Manual{,   title = {LIDIF: Likelihood-based Inference for Differential Item Functioning (LIDIF)},   author = {Zeling He},   year = {2024},   note = {R package version 0.1.0}, }"},{"path":"/reference/LIDIF.html","id":null,"dir":"Reference","previous_headings":"","what":"Performing Likelihood-based Investigation of Differential Item Functioning  (LIDIF) — LIDIF","title":"Performing Likelihood-based Investigation of Differential Item Functioning  (LIDIF) — LIDIF","text":"function takes output `prepare_data` function run LIDIF procedure. Notice procedure incoporats parallel computing functions boost computation speed. Therefore, strongly recommend run function multiple cores. Please refer arguments specifying number cores.","code":""},{"path":"/reference/LIDIF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performing Likelihood-based Investigation of Differential Item Functioning  (LIDIF) — LIDIF","text":"","code":"LIDIF(   dat.list,   cl_num,   type_list,   output_dir = NULL,   int_bound = 3L,   evalimit = 10L,   stop_at = 0.01,   maxit = 50L,   optim_trace = TRUE,   optim_reltol = 0.1,   hessian = FALSE,   variance = TRUE,   initialization = TRUE,   init_input = NULL,   random_per = 0.05,   replace = FALSE,   init_nums = 30,   init_maxit = 5 )"},{"path":"/reference/LIDIF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performing Likelihood-based Investigation of Differential Item Functioning  (LIDIF) — LIDIF","text":"dat.list data list containing observed items matrix enogenous variable matrix derived `prepare_data` function. cl_num Number cores LIDIF can use. better! type_list vector characters containing types items (`binary`,`ordinal`). length vector 1, type apply items. output_dir path save intermediate results. default value NULL. NULL, results save current working directory. int_bound adaptive integration boundaries. default value 3, meaning integration taking -3 3. evalimit number quadrature used adaptive integration. default value 20. stop_at absolute convergence tolerance. default value 0.01. maxit maximum number iterations used EM algorithm. default value 50. optim_trace Logical. track optimization process? default value TRUE. optim_reltol relative convergence tolerance M-step. default value 0.1. hessian Logical. return numerical hessian matrix optimization procedures? default value FALSE. variance Logical. calculate variance covariance matrix end? default value TRUE. initialization Logical. start random initialization? default TRUE. init_input initialization = FALSE, specify initialization . default NULL. random_per Percentage random samples initialization. default value 0.05. replace Logical. generate random samples replacement? default FALSE. init_nums Number random initialization. default 30. init_maxit Maximum number iterations initialization. default 5.","code":""},{"path":"/reference/LIDIF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performing Likelihood-based Investigation of Differential Item Functioning  (LIDIF) — LIDIF","text":"object class `LIDIF` contains `coefficients`: list estimated DIF effects. sublist corresponding item. `variance`: list estimated variance individual coefficients, following order `coefficients`. Return variance = TRUE. `cov`: estimated variance-covariance matrix coefficeints. Return variance = TRUE.","code":""},{"path":"/reference/LIDIF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Performing Likelihood-based Investigation of Differential Item Functioning  (LIDIF) — LIDIF","text":"Denote latent variable \\(Y\\), covariate matrix \\(Z\\) \\(X_1,...,X_p\\) observed items. items binary responses (0 1), LIDIF models $$logit(P(X_i =1)) = \\alpha_i+\\beta_i^TZ + \\zeta_i^TZ \\times Y$$ items ordinal responses (1, 2,...,\\(M_i\\)), LIDIF models $$logit(P(X_i \\geq m)) = \\alpha_{im}+\\beta_i^TZ + \\zeta_i^TZ \\times Y$$ \\(m \\\\{1, 2,...,M_i-1\\}\\) \\(\\alpha_{i1} > ...> \\alpha_{im-1}\\). model returns maximum likelihood estimators coefficients estimated variance (choice). key estimation accuracy LIDIF specifying multiple random initialization `init_nums` arguments. trade-number random initialization specified, longer took run `LIDIF`. always speed process running multiple computing cores (specified `cl_num`) arguments. reference, default setting provides accurate estimation simulations 5 items 2 exogenous covariates 1000 observations. computing time 1 hour 5 cores using R version 4.0.2.","code":""},{"path":"/reference/LIDIF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performing Likelihood-based Investigation of Differential Item Functioning  (LIDIF) — LIDIF","text":"","code":"if (FALSE) { ## load the sample data (see `?LIDIF::binsurvs` for details) binsurvs = LIDIF::binsurvs # The exogenous variables are age and sex.  ## prepare for model fitting dat.list = prepare_data(binsurvs$X, binsurvs$Z)  ## LIDIF fitting # The parameter specified is set to reduce the running time. # In your analysis, please refer to the default value. library(LIDIF) res = LIDIF(dat.list = dat.list,             cl_num = 5, # before running, please check if you have 5 cores             type_list = \"binary\",             maxit = 2,             random_per = 0.5,             init_nums = 2,             init_maxit = 2) }"},{"path":"/reference/binsurvs.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Binomial Surveys Data — binsurvs","title":"Simulated Binomial Surveys Data — binsurvs","text":"simulated data used examples.","code":""},{"path":"/reference/binsurvs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Binomial Surveys Data — binsurvs","text":"","code":"binsurvs"},{"path":"/reference/binsurvs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Binomial Surveys Data — binsurvs","text":"`binsurvs` list two elements: X surveys three items. `item 1` DIF effects; `item 2` uniform DIF effects; `item 3` non-uniform DIF effects Z Two normalized exogenous covariates: age sex","code":""},{"path":"/reference/getICC.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting the Item Characteristics Curve (ICC) based on LIDIF results — getICC","title":"Plotting the Item Characteristics Curve (ICC) based on LIDIF results — getICC","text":"function plots ICC curve items especially helpful want visualize uniform/non-uniform DIF effects found LIDIF modeling.","code":""},{"path":"/reference/getICC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting the Item Characteristics Curve (ICC) based on LIDIF results — getICC","text":"","code":"getICC(   coefs_list,   cov_mat,   compare_var,   type_list,   title = NULL,   latent_name = \"latent\",   xrange = seq(-3, 3, 0.01) )"},{"path":"/reference/getICC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting the Item Characteristics Curve (ICC) based on LIDIF results — getICC","text":"coefs_list list DIF effects. format `coefficients` value `LIDIF` output. cov_mat covariate matrix. DIF effects can visualized specifying different values one covariates. compare_var name covariate visualize DIF effect. type_list vector characters containing types items (`binary`,`ordinal`). length vector 1, type apply items. title Title plot. defualt value `NULL`. latent_name Name latent variable (showing x-axises). default `latent`. xrange seqeunce latent variable plotted . default setting -3 3 seperated 0.01.","code":""},{"path":"/reference/getICC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting the Item Characteristics Curve (ICC) based on LIDIF results — getICC","text":"plot combining ICC curves items.","code":""},{"path":"/reference/getICC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting the Item Characteristics Curve (ICC) based on LIDIF results — getICC","text":"","code":"if (FALSE) { ## load the sample data (see `?LIDIF::binsurvs` for details) binsurvs = LIDIF::binsurvs # The exogenous variables are age and sex.   ## prepare for model fitting dat.list = prepare_data(binsurvs$X, binsurvs$Z)  ## LIDIF fitting # The parameter specified is set to reduce the running time. # In your analysis, please refer to the default value. library(LIDIF) res = LIDIF(dat.list = dat.list,             cl_num = 5, # before running, please check if you have 5 cores             type_list = \"binary\",             maxit = 2,             random_per = 0.5,             init_nums = 2,             init_maxit = 2)  ## Plot the DIF effects for sex using ICC curves # specify the covariate matrix tt = cbind(\"age\" = c(mean(dat.list$Z[,\"age\"]), mean(dat.list$Z[,\"age\"])),            \"sex\" = c(0,1)) getICC(res$coefficients,       cov_mat = tt,       compare_var = \"sex\",       type_list = \"binary\") }"},{"path":"/reference/predict_LIDIF.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating the latent variable based on the LIDIF model fitting results — predict_LIDIF","title":"Estimating the latent variable based on the LIDIF model fitting results — predict_LIDIF","text":"function estimates latent variable calculating estimated mean (standard error) latent variable given specified exogenous variables item responses LIDIF function.","code":""},{"path":"/reference/predict_LIDIF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating the latent variable based on the LIDIF model fitting results — predict_LIDIF","text":"","code":"predict_LIDIF(   dat.list,   coefs_list,   int_bound = 3L,   evalimit = 10L,   variance = TRUE )"},{"path":"/reference/predict_LIDIF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating the latent variable based on the LIDIF model fitting results — predict_LIDIF","text":"dat.list data list containing observed items matrix enogenous variable matrix derived `prepare_data` function. format input `LIDIF` function. coefs_list list DIF effects. format `coefficients` value `LIDIF` output int_bound adaptive integration boundaries. default value 3, meaning integration taking -3 3. evalimit number quadrature used adaptive integration. default value 20. variance Logical. Whether output estimated variance well. default TRUE.","code":""},{"path":"/reference/predict_LIDIF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimating the latent variable based on the LIDIF model fitting results — predict_LIDIF","text":"list contains est_mean - estimated posterior mean. set_var - estimated posterior variance. Output `variance` = TRUE.","code":""},{"path":"/reference/predict_LIDIF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimating the latent variable based on the LIDIF model fitting results — predict_LIDIF","text":"Denote latent variable \\(Y\\), covariate matrix \\(Z\\) \\(X_1,...,X_p\\) observed items. can estimate latent variable calculating posterior mean $$E(Y|Z, X_1, ..., X_p)$$ posterior variance $$Var(Y|Z, X_1,..., X_p)$$ Therefore, function can used estimating posterior mean latent variable individual,  predicting latent level new participants.","code":""},{"path":"/reference/predict_LIDIF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating the latent variable based on the LIDIF model fitting results — predict_LIDIF","text":"","code":"if (FALSE) { ## load the sample data (see `?LIDIF::binsurvs` for details) binsurvs = LIDIF::binsurvs # The exogenous variables are age and sex.  ## prepare for model fitting dat.list = prepare_data(binsurvs$X, binsurvs$Z)  ## LIDIF fitting # The parameter specified is set to reduce the running time. # In your analysis, please refer to the default value. library(LIDIF) res = LIDIF(dat.list = dat.list,             cl_num = 5, # before running, please check if you have 5 cores             type_list = \"binary\",             maxit = 2,             random_per = 0.5,             init_nums = 2,             init_maxit = 2)  ## predict the posterior distribution of the latent variable predict_LIDIF(dat.list = dat.list,               coefs_list = res$coefficients) }"},{"path":"/reference/prepare_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Preparing data for LIDIF function. — prepare_data","title":"Preparing data for LIDIF function. — prepare_data","text":"function prepare raw data fit LIDIF model.","code":""},{"path":"/reference/prepare_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preparing data for LIDIF function. — prepare_data","text":"","code":"prepare_data(X, Z)"},{"path":"/reference/prepare_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preparing data for LIDIF function. — prepare_data","text":"X numeric matrix columns corresponding items. item binary, please code 0/1; item ordinal, please code integers starting 1, e.g. 1,2,3. X can missing columns entire row. Z matrix exogenous variables. Z contain missing data number rows X. Please include intercept .","code":""},{"path":"/reference/prepare_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preparing data for LIDIF function. — prepare_data","text":"list containing two elements.","code":""},{"path":"/reference/prepare_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preparing data for LIDIF function. — prepare_data","text":"","code":"items_matrix = cbind.data.frame(\"item1\" = rbinom(100, 0,1),                                 \"item2\" = sample(c(1,2,3), size = 100, replace = TRUE)) covariates = cbind.data.frame(\"age\" = runif(100, 10, 50),                              \"sex\" = rbinom(100, 0, 1)) prepare_data(X = items_matrix, Z = covariates) #> $X #>        item1 item2 #>   [1,]     0     1 #>   [2,]     0     3 #>   [3,]     0     3 #>   [4,]     0     1 #>   [5,]     0     2 #>   [6,]     0     3 #>   [7,]     0     3 #>   [8,]     0     3 #>   [9,]     0     2 #>  [10,]     0     1 #>  [11,]     0     1 #>  [12,]     0     1 #>  [13,]     0     3 #>  [14,]     0     3 #>  [15,]     0     1 #>  [16,]     0     2 #>  [17,]     0     2 #>  [18,]     0     3 #>  [19,]     0     3 #>  [20,]     0     2 #>  [21,]     0     3 #>  [22,]     0     1 #>  [23,]     0     1 #>  [24,]     0     1 #>  [25,]     0     2 #>  [26,]     0     2 #>  [27,]     0     3 #>  [28,]     0     3 #>  [29,]     0     2 #>  [30,]     0     3 #>  [31,]     0     1 #>  [32,]     0     2 #>  [33,]     0     3 #>  [34,]     0     3 #>  [35,]     0     1 #>  [36,]     0     2 #>  [37,]     0     1 #>  [38,]     0     2 #>  [39,]     0     3 #>  [40,]     0     2 #>  [41,]     0     1 #>  [42,]     0     2 #>  [43,]     0     1 #>  [44,]     0     2 #>  [45,]     0     3 #>  [46,]     0     1 #>  [47,]     0     2 #>  [48,]     0     2 #>  [49,]     0     3 #>  [50,]     0     2 #>  [51,]     0     1 #>  [52,]     0     1 #>  [53,]     0     3 #>  [54,]     0     2 #>  [55,]     0     1 #>  [56,]     0     1 #>  [57,]     0     3 #>  [58,]     0     3 #>  [59,]     0     2 #>  [60,]     0     3 #>  [61,]     0     2 #>  [62,]     0     3 #>  [63,]     0     2 #>  [64,]     0     3 #>  [65,]     0     2 #>  [66,]     0     2 #>  [67,]     0     1 #>  [68,]     0     3 #>  [69,]     0     2 #>  [70,]     0     2 #>  [71,]     0     3 #>  [72,]     0     1 #>  [73,]     0     2 #>  [74,]     0     1 #>  [75,]     0     1 #>  [76,]     0     3 #>  [77,]     0     2 #>  [78,]     0     1 #>  [79,]     0     2 #>  [80,]     0     2 #>  [81,]     0     2 #>  [82,]     0     3 #>  [83,]     0     2 #>  [84,]     0     2 #>  [85,]     0     2 #>  [86,]     0     1 #>  [87,]     0     3 #>  [88,]     0     3 #>  [89,]     0     1 #>  [90,]     0     1 #>  [91,]     0     1 #>  [92,]     0     1 #>  [93,]     0     2 #>  [94,]     0     1 #>  [95,]     0     1 #>  [96,]     0     1 #>  [97,]     0     2 #>  [98,]     0     1 #>  [99,]     0     3 #> [100,]     0     3 #>  #> $Z #>     Intercept      age sex #> 1           1 19.94155   0 #> 2           1 26.11525   0 #> 3           1 40.78521   0 #> 4           1 14.77941   0 #> 5           1 17.78780   0 #> 6           1 16.58277   0 #> 7           1 36.52826   0 #> 8           1 44.26300   0 #> 9           1 47.06186   0 #> 10          1 32.09510   0 #> 11          1 33.08263   0 #> 12          1 37.49791   0 #> 13          1 19.78873   0 #> 14          1 11.78469   0 #> 15          1 46.39418   0 #> 16          1 12.82725   0 #> 17          1 49.87566   0 #> 18          1 34.47410   0 #> 19          1 16.90235   0 #> 20          1 46.37764   0 #> 21          1 11.49805   0 #> 22          1 33.74215   0 #> 23          1 19.47910   0 #> 24          1 46.25189   0 #> 25          1 42.75492   0 #> 26          1 37.99317   0 #> 27          1 18.80001   0 #> 28          1 39.11964   0 #> 29          1 18.68338   0 #> 30          1 28.24921   0 #> 31          1 23.31199   0 #> 32          1 32.73411   0 #> 33          1 20.08823   0 #> 34          1 28.56054   0 #> 35          1 46.70642   0 #> 36          1 48.91377   0 #> 37          1 42.76330   0 #> 38          1 46.11695   0 #> 39          1 33.25464   0 #> 40          1 40.92034   0 #> 41          1 49.80492   0 #> 42          1 38.43885   0 #> 43          1 18.59770   0 #> 44          1 21.67031   0 #> 45          1 38.87039   0 #> 46          1 44.66463   0 #> 47          1 19.53812   0 #> 48          1 10.17985   0 #> 49          1 47.74066   0 #> 50          1 27.52549   0 #> 51          1 40.02413   0 #> 52          1 36.71263   0 #> 53          1 26.31893   0 #> 54          1 24.04995   0 #> 55          1 39.52366   0 #> 56          1 36.57142   0 #> 57          1 13.40899   0 #> 58          1 44.24529   0 #> 59          1 13.07933   0 #> 60          1 44.11379   0 #> 61          1 14.25388   0 #> 62          1 29.39211   0 #> 63          1 19.88876   0 #> 64          1 37.46277   0 #> 65          1 16.54493   0 #> 66          1 48.11299   0 #> 67          1 22.87418   0 #> 68          1 24.46136   0 #> 69          1 45.50894   0 #> 70          1 43.12058   0 #> 71          1 14.02626   0 #> 72          1 46.24206   0 #> 73          1 40.90921   0 #> 74          1 25.33483   0 #> 75          1 49.98610   0 #> 76          1 23.97196   0 #> 77          1 47.89273   0 #> 78          1 18.64400   0 #> 79          1 11.28371   0 #> 80          1 15.81263   0 #> 81          1 44.17536   0 #> 82          1 18.52597   0 #> 83          1 18.41243   0 #> 84          1 11.58083   0 #> 85          1 47.79099   0 #> 86          1 19.79712   0 #> 87          1 41.24490   0 #> 88          1 21.52949   0 #> 89          1 45.01432   0 #> 90          1 21.83000   0 #> 91          1 49.34102   0 #> 92          1 33.59350   0 #> 93          1 40.36634   0 #> 94          1 43.44301   0 #> 95          1 40.51278   0 #> 96          1 26.69080   0 #> 97          1 15.52299   0 #> 98          1 13.23380   0 #> 99          1 36.23931   0 #> 100         1 34.08015   0 #>"},{"path":"/reference/summary_LIDIF.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize LIDIF output. — summary_LIDIF","title":"Summarize LIDIF output. — summary_LIDIF","text":"Summarize LIDIF output.","code":""},{"path":"/reference/summary_LIDIF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize LIDIF output. — summary_LIDIF","text":"","code":"summary_LIDIF(object, terms = NULL, all_terms = TRUE, digits = 2)"},{"path":"/reference/summary_LIDIF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize LIDIF output. — summary_LIDIF","text":"object object class `LIDIF`. terms vector characters containing name variables like perform Wald tests. example, specifying terms = \"age\" like test age's DIF effects. default `NULL`. all_terms Logical. Whether perform Wald tests individual coefficients. default `TRUE`. digits Numeric. Control number digits displayed results. default value 2.","code":""},{"path":"/reference/summary_LIDIF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize LIDIF output. — summary_LIDIF","text":"list containing. `stats`: Wald statistics. `p_value`: corresponding p values. `coefficients`: data frame containing estimated coefficients, standard error, factor loading p values. `term`: corresponding test statistics, degree freedom p values specifying `terms` argument.","code":""},{"path":"/reference/summary_LIDIF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize LIDIF output. — summary_LIDIF","text":"","code":"if (FALSE) { ## load the sample data (see `?LIDIF::binsurvs` for details) binsurvs = LIDIF::binsurvs # The exogenous variables are age and sex.  ## prepare for model fitting dat.list = prepare_data(binsurvs$X, binsurvs$Z)  ## LIDIF fitting # The parameter specified is set to reduce the running time. # In your analysis, please refer to the default value. library(LIDIF) res = LIDIF(dat.list = dat.list,             cl_num = 5, # before running, please check if you have 5 cores             type_list = \"binary\",             maxit = 2,             random_per = 0.5,             init_nums = 2,             init_maxit = 2)  ## Summarize results: individual DIF effects summary_LIDIF(res)  ## Summarize results: combineing uniform and non-uniform effects for sex summary_LIDIF(res, terms = \"sex\") }"}]
